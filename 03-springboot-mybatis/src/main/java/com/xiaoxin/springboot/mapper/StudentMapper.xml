<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoxin.springboot.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.xiaoxin.springboot.model.Student">
    <id column="sno" jdbcType="VARCHAR" property="sno" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="gno" jdbcType="INTEGER" property="gno" />
  </resultMap>


  <sql id="Base_Column_List">
    sno, sname, address, email, age, telephone, gno
  </sql>

  <!--查询所有学生-->
  <select id="selectAllStudent" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where sno = #{sno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where sno = #{sno,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoxin.springboot.model.Student">
    insert into student (sno, sname, address, 
      email, age, telephone, 
      gno)
    values (#{sno,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, 
      #{gno,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoxin.springboot.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        sno,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="gno != null">
        gno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="gno != null">
        #{gno,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoxin.springboot.model.Student">
    update student
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="gno != null">
        gno = #{gno,jdbcType=INTEGER},
      </if>
    </set>
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoxin.springboot.model.Student">
    update student
    set sname = #{sname,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      gno = #{gno,jdbcType=INTEGER}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
</mapper>